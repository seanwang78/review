<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.uaepay.pub.csc.core.dal.mapper.logmonitor.LogRuleMapper">
  <resultMap id="BaseResultMap" type="com.uaepay.pub.csc.core.dal.dataobject.logmonitor.LogRule">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="function_code" jdbcType="VARCHAR" property="functionCode" />
    <result column="rule_type" jdbcType="VARCHAR" property="ruleType" />
    <result column="app_code" jdbcType="VARCHAR" property="appCode" />
    <result column="api_code" jdbcType="VARCHAR" property="apiCode" />
    <result column="return_code" jdbcType="VARCHAR" property="returnCode" />
    <result column="expression_type" jdbcType="VARCHAR" property="expressionType" />
    <result column="match_expression" jdbcType="VARCHAR" property="matchExpression" />
    <result column="enable_flag" jdbcType="CHAR" property="enableFlag" />
    <result column="update_by" jdbcType="VARCHAR" property="updateBy" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, function_code, rule_type, app_code, api_code, return_code, expression_type, match_expression, enable_flag,
    update_by, memo, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_log_rule
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectEnabledByFunctionCode" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_log_rule
    where function_code = #{functionCode,jdbcType=VARCHAR} and enable_flag = 'Y'
  </select>
  <insert id="insert" parameterType="com.uaepay.pub.csc.core.dal.dataobject.logmonitor.LogRule">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_log_rule (function_code, rule_type, app_code, api_code, return_code,
      expression_type, match_expression, enable_flag, 
      update_by, memo, create_time, 
      update_time)
    values (#{functionCode,jdbcType=VARCHAR}, #{ruleType,jdbcType=VARCHAR}, #{appCode,jdbcType=VARCHAR}, #{apiCode,jdbcType=VARCHAR}, #{returnCode,jdbcType=VARCHAR},
      #{expressionType,jdbcType=VARCHAR}, #{matchExpression,jdbcType=VARCHAR}, #{enableFlag,jdbcType=CHAR}, 
      #{updateBy,jdbcType=VARCHAR}, #{memo,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.uaepay.pub.csc.core.dal.dataobject.logmonitor.LogRule">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_log_rule
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="functionCode != null">
        function_code,
      </if>
      <if test="ruleType != null">
        rule_type,
      </if>
      <if test="appCode != null">
        app_code,
      </if>
      <if test="apiCode != null">
        api_code,
      </if>
      <if test="returnCode != null">
        return_code,
      </if>
      <if test="expressionType != null">
        expression_type,
      </if>
      <if test="matchExpression != null">
        match_expression,
      </if>
      <if test="enableFlag != null">
        enable_flag,
      </if>
      <if test="updateBy != null">
        update_by,
      </if>
      <if test="memo != null">
        memo,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="functionCode != null">
        #{functionCode,jdbcType=VARCHAR},
      </if>
      <if test="ruleType != null">
        #{ruleType,jdbcType=VARCHAR},
      </if>
      <if test="appCode != null">
        #{appCode,jdbcType=VARCHAR},
      </if>
      <if test="apiCode != null">
        #{apiCode,jdbcType=VARCHAR},
      </if>
      <if test="returnCode != null">
        #{returnCode,jdbcType=VARCHAR},
      </if>
      <if test="expressionType != null">
        #{expressionType,jdbcType=VARCHAR},
      </if>
      <if test="matchExpression != null">
        #{matchExpression,jdbcType=VARCHAR},
      </if>
      <if test="enableFlag != null">
        #{enableFlag,jdbcType=CHAR},
      </if>
      <if test="updateBy != null">
        #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.uaepay.pub.csc.core.dal.dataobject.logmonitor.LogRule">
    update t_log_rule
    <set>
      <if test="functionCode != null">
        function_code = #{functionCode,jdbcType=VARCHAR},
      </if>
      <if test="ruleType != null">
        rule_type = #{ruleType,jdbcType=VARCHAR},
      </if>
      <if test="appCode != null">
        app_code = #{appCode,jdbcType=VARCHAR},
      </if>
      <if test="apiCode != null">
        api_code = #{apiCode,jdbcType=VARCHAR},
      </if>
      <if test="returnCode != null">
        return_code = #{returnCode,jdbcType=VARCHAR},
      </if>
      <if test="expressionType != null">
        expression_type = #{expressionType,jdbcType=VARCHAR},
      </if>
      <if test="matchExpression != null">
        match_expression = #{matchExpression,jdbcType=VARCHAR},
      </if>
      <if test="enableFlag != null">
        enable_flag = #{enableFlag,jdbcType=CHAR},
      </if>
      <if test="updateBy != null">
        update_by = #{updateBy,jdbcType=VARCHAR},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.uaepay.pub.csc.core.dal.dataobject.logmonitor.LogRule">
    update t_log_rule
    set function_code = #{functionCode,jdbcType=VARCHAR},
      rule_type = #{ruleType,jdbcType=VARCHAR},
      app_code = #{appCode,jdbcType=VARCHAR},
      api_code = #{apiCode,jdbcType=VARCHAR},
      return_code = #{returnCode,jdbcType=VARCHAR},
      expression_type = #{expressionType,jdbcType=VARCHAR},
      match_expression = #{matchExpression,jdbcType=VARCHAR},
      enable_flag = #{enableFlag,jdbcType=CHAR},
      update_by = #{updateBy,jdbcType=VARCHAR},
      memo = #{memo,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>